class Solution {
  public:
    // Function to serialize a tree and return a list containing nodes of tree.
    
    void solve(Node *root,vector<int> &a){
        if(root==NULL){
            a.push_back(-1);
            return;
        }
        a.push_back(root->data);
        solve(root->left,a);
        solve(root->right,a);
        
    }
    
    vector<int> serialize(Node *root) {
        // Your code here
        vector<int> a;
        solve(root,a);
        return a;
    }

    // Function to deserialize a list and construct the tree.
    
    int i=0;
    Node *deSerialize(vector<int> &arr) {
        // Your code here
        
        int t= arr[i];
        i++;
        if(t==-1){
            return NULL;
        }
       
        Node *newnode = new Node(t);
        
        newnode->left= deSerialize(arr);
        newnode->right=deSerialize(arr);
        
        return newnode;
        
    }
};
