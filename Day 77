class Solution {
  public:
  
    vector<vector<int>> ans;
    
    void placeQ(int r,int n,vector<vector<int>> &mat){
        
        if(r==n){
         vector<int>boad;
         for(int i=0;i<n;i++){
             for(int j=0;j<n;j++){
                 if(mat[i][j]==1){
                     boad.push_back(j+1);
                 }
             }
         }
         ans.push_back(boad);
         return ;
        }
        
        for(int i=0;i<n;i++){
            if(issafe(mat,r,i,n)){
                mat[r][i]=1;
                placeQ(r+1,n,mat);
                mat[r][i]=0;
            }
        }
    }
    
    
    bool issafe(vector<vector<int>> &mat,int r,int c,int n){
        for(int i=0;i<r;i++){
            if(mat[i][c]==1){
                return false;
            }
        }
        for(int i=r-1,j=c-1;i>=0 && j>=0;i--,j--){
            if(mat[i][j]==1){
                return false;
            }
        }
        for(int i=r-1,j=c+1;i>=0 && j<n;i--,j++){
            if(mat[i][j]==1){
                return false;
            }
        }
        return true;
    }
    
    
    vector<vector<int>> nQueen(int n) {
        // code here
       vector<vector<int>> mat(n,vector<int>(n,0));
       
       placeQ(0,n,mat);
       
        return ans;
     }
};
