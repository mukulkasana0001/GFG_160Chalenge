class Solution {
  public:
    // Function to find a solved Sudoku.
    
    bool issafe(vector<vector<int>> &mat ,int r,int c,int num){
        for(int i=0;i<=8;i++){
            if(mat[r][i]==num){
                return false;
            }
        }
        
        for(int i=0;i<=8;i++){
            if(mat[i][c]==num){
                return false;
            }
        }
        
        int sr= r-(r%3);
        int sc= c-(c%3);
        
        for(int i=0;i<3;i++){
            for(int j=0;j<3;j++){
                if(mat[i+sr][j+sc]==num){
                    return false;
                }
            }
        }
        return true;
    }
    
    
    bool solvSud(vector<vector<int>> &mat ,int r,int c){
        int n=mat.size();
        
        if(r==n-1 && c==n){
            return true;
        }
        
        if(c==n){
            r++;
            c=0;
        }
        
        if(mat[r][c]!=0){
            return solvSud(mat,r,c+1);
        }
        
        for(int num=1;num<=n;num++){
            if(issafe(mat,r,c,num)){
                mat[r][c]=num;
                if(solvSud(mat,r,c+1)){
                 return true;
                }
                 mat[r][c]=0;
                
        }
        }
        return false;
    }
    
    
    void solveSudoku(vector<vector<int>> &mat) {
        // code here
         solvSud(mat,0,0);
    }
};
